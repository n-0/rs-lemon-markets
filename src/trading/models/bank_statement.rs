/*
 * lemon.markets | Trading API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: b996d5fa9acbe1796d08c2f8360172c63ac713ad
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BankStatement {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "account_id")]
    pub account_id: String,
    #[serde(rename = "type")]
    pub _type: String,
    #[serde(rename = "date")]
    pub date: String,
    #[serde(rename = "amount")]
    pub amount: i32,
    #[serde(rename = "isin", skip_serializing_if = "Option::is_none")]
    pub isin: Option<String>,
    #[serde(rename = "isin_title", skip_serializing_if = "Option::is_none")]
    pub isin_title: Option<String>,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "quantity", skip_serializing_if = "Option::is_none")]
    pub quantity: Option<i32>,
}

impl BankStatement {
    pub fn new(id: String, account_id: String, _type: String, date: String, amount: i32, created_at: String) -> BankStatement {
        BankStatement {
            id,
            account_id,
            _type,
            date,
            amount,
            isin: None,
            isin_title: None,
            created_at,
            quantity: None,
        }
    }
}


