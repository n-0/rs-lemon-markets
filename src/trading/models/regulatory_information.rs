/*
 * lemon.markets | Trading API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: b996d5fa9acbe1796d08c2f8360172c63ac713ad
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RegulatoryInformation {
    #[serde(rename = "costs_entry", skip_serializing_if = "Option::is_none")]
    pub costs_entry: Option<i32>,
    #[serde(rename = "costs_entry_pct", skip_serializing_if = "Option::is_none")]
    pub costs_entry_pct: Option<String>,
    #[serde(rename = "costs_running")]
    pub costs_running: i32,
    #[serde(rename = "costs_running_pct", skip_serializing_if = "Option::is_none")]
    pub costs_running_pct: Option<String>,
    #[serde(rename = "costs_product")]
    pub costs_product: i32,
    #[serde(rename = "costs_product_pct", skip_serializing_if = "Option::is_none")]
    pub costs_product_pct: Option<String>,
    #[serde(rename = "costs_exit")]
    pub costs_exit: i32,
    #[serde(rename = "costs_exit_pct", skip_serializing_if = "Option::is_none")]
    pub costs_exit_pct: Option<String>,
    #[serde(rename = "yield_reduction_year", skip_serializing_if = "Option::is_none")]
    pub yield_reduction_year: Option<i32>,
    #[serde(rename = "yield_reduction_year_pct", skip_serializing_if = "Option::is_none")]
    pub yield_reduction_year_pct: Option<String>,
    #[serde(rename = "yield_reduction_year_following", skip_serializing_if = "Option::is_none")]
    pub yield_reduction_year_following: Option<i32>,
    #[serde(rename = "yield_reduction_year_following_pct", skip_serializing_if = "Option::is_none")]
    pub yield_reduction_year_following_pct: Option<String>,
    #[serde(rename = "yield_reduction_year_exit")]
    pub yield_reduction_year_exit: i32,
    #[serde(rename = "yield_reduction_year_exit_pct")]
    pub yield_reduction_year_exit_pct: String,
    #[serde(rename = "estimated_holding_duration_years", skip_serializing_if = "Option::is_none")]
    pub estimated_holding_duration_years: Option<String>,
    #[serde(rename = "estimated_yield_reduction_total", skip_serializing_if = "Option::is_none")]
    pub estimated_yield_reduction_total: Option<i32>,
    #[serde(rename = "estimated_yield_reduction_total_pct", skip_serializing_if = "Option::is_none")]
    pub estimated_yield_reduction_total_pct: Option<String>,
    #[serde(rename = "KIID", skip_serializing_if = "Option::is_none")]
    pub KIID: Option<String>,
    #[serde(rename = "legal_disclaimer")]
    pub legal_disclaimer: String,
}

impl RegulatoryInformation {
    pub fn new(costs_running: i32, costs_product: i32, costs_exit: i32, yield_reduction_year_exit: i32, yield_reduction_year_exit_pct: String, legal_disclaimer: String) -> RegulatoryInformation {
        RegulatoryInformation {
            costs_entry: None,
            costs_entry_pct: None,
            costs_running,
            costs_running_pct: None,
            costs_product,
            costs_product_pct: None,
            costs_exit,
            costs_exit_pct: None,
            yield_reduction_year: None,
            yield_reduction_year_pct: None,
            yield_reduction_year_following: None,
            yield_reduction_year_following_pct: None,
            yield_reduction_year_exit,
            yield_reduction_year_exit_pct,
            estimated_holding_duration_years: None,
            estimated_yield_reduction_total: None,
            estimated_yield_reduction_total_pct: None,
            KIID: None,
            legal_disclaimer,
        }
    }
}


