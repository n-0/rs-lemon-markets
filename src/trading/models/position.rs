/*
 * lemon.markets | Trading API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: b996d5fa9acbe1796d08c2f8360172c63ac713ad
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Position {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "order_id", skip_serializing_if = "Option::is_none")]
    pub order_id: Option<String>,
    #[serde(rename = "external_id", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
    #[serde(rename = "type")]
    pub _type: crate::trading::models::PositionType,
    #[serde(rename = "quantity")]
    pub quantity: i32,
    #[serde(rename = "isin")]
    pub isin: String,
    #[serde(rename = "isin_title", skip_serializing_if = "Option::is_none")]
    pub isin_title: Option<String>,
    #[serde(rename = "date")]
    pub date: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
}

impl Position {
    pub fn new(id: String, _type: crate::trading::models::PositionType, quantity: i32, isin: String, date: String, created_at: String) -> Position {
        Position {
            id,
            order_id: None,
            external_id: None,
            _type,
            quantity,
            isin,
            isin_title: None,
            date,
            created_at,
        }
    }
}


