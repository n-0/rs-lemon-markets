/*
 * lemon.markets | Trading API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: b996d5fa9acbe1796d08c2f8360172c63ac713ad
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Status : An enumeration.

/// An enumeration.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "inactive")]
    Inactive,
    #[serde(rename = "activated")]
    Activated,
    #[serde(rename = "open")]
    Open,
    #[serde(rename = "in_progress")]
    InProgress,
    #[serde(rename = "executed")]
    Executed,
    #[serde(rename = "expired")]
    Expired,
    #[serde(rename = "canceling")]
    Canceling,
    #[serde(rename = "canceled")]
    Canceled,
    #[serde(rename = "rejected")]
    Rejected,

}

impl ToString for Status {
    fn to_string(&self) -> String {
        match self {
            Self::Inactive => String::from("inactive"),
            Self::Activated => String::from("activated"),
            Self::Open => String::from("open"),
            Self::InProgress => String::from("in_progress"),
            Self::Executed => String::from("executed"),
            Self::Expired => String::from("expired"),
            Self::Canceling => String::from("canceling"),
            Self::Canceled => String::from("canceled"),
            Self::Rejected => String::from("rejected"),
        }
    }
}

impl Default for Status {
    fn default() -> Status {
        Self::Inactive
    }
}




